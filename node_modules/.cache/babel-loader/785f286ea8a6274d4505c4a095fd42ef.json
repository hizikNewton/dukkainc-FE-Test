{"ast":null,"code":"var _jsxFileName = \"/home/ire/Dev/frontend-engineer-interview/src/components/alertMessage/AlertMessage.tsx\";\nimport React from \"react\";\nimport * as S from \"./styles\";\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/window-close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertMessage = ({\n  title,\n  status = \"neutral\",\n  children,\n  onClick,\n  actionText\n}) => {\n  const isAction = !!actionText;\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    status: status,\n    children: [/*#__PURE__*/_jsxDEV(S.TopWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), isAction ? !children && /*#__PURE__*/_jsxDEV(S.ActionButton, {\n        onClick: onClick,\n        children: actionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(S.CloseButton, {\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), children && /*#__PURE__*/_jsxDEV(S.Content, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this), children && isAction && /*#__PURE__*/_jsxDEV(S.ActionButton, {\n      onClick: onClick,\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: actionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = AlertMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"sources":["/home/ire/Dev/frontend-engineer-interview/src/components/alertMessage/AlertMessage.tsx"],"names":["React","S","AlertMessage","title","status","children","onClick","actionText","isAction","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;AAGA,OAAO,MAAMC,YAA8B,GAAG,CAAC;AAC7CC,EAAAA,KAD6C;AAE7CC,EAAAA,MAAM,GAAG,SAFoC;AAG7CC,EAAAA,QAH6C;AAI7CC,EAAAA,OAJ6C;AAK7CC,EAAAA;AAL6C,CAAD,KAMhC;AACZ,QAAMC,QAAQ,GAAG,CAAC,CAACD,UAAnB;AAEA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAW,IAAA,MAAM,EAAEH,MAAnB;AAAA,4BACE,QAAC,CAAD,CAAG,UAAH;AAAA,8BACE,QAAC,CAAD,CAAG,KAAH;AAAA,kBAAUD;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,EAEGK,QAAQ,GACP,CAACH,QAAD,iBACE,QAAC,CAAD,CAAG,YAAH;AAAgB,QAAA,OAAO,EAAEC,OAAzB;AAAA,kBAAmCC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFK,gBAKP,QAAC,CAAD,CAAG,WAAH;AAAe,QAAA,OAAO,EAAED,OAAxB;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGD,QAAQ,iBAAI,QAAC,CAAD,CAAG,OAAH;AAAA,gBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAbf,EAcGA,QAAQ,IAAIG,QAAZ,iBACC,QAAC,CAAD,CAAG,YAAH;AAAgB,MAAA,OAAO,EAAEF,OAAzB;AAAkC,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA/BM;KAAML,Y","sourcesContent":["import React from \"react\";\nimport * as S from \"./styles\";\nimport { IProps } from \"./types\";\nimport { ReactComponent as Close } from \"../../assets/icons/window-close.svg\";\nexport const AlertMessage: React.FC<IProps> = ({\n  title,\n  status = \"neutral\",\n  children,\n  onClick,\n  actionText,\n}: IProps) => {\n  const isAction = !!actionText;\n\n  return (\n    <S.Wrapper status={status}>\n      <S.TopWrapper>\n        <S.Title>{title}</S.Title>\n        {isAction ? (\n          !children && (\n            <S.ActionButton onClick={onClick}>{actionText}</S.ActionButton>\n          )\n        ) : (\n          <S.CloseButton onClick={onClick}>\n            <Close />\n          </S.CloseButton>\n        )}\n      </S.TopWrapper>\n      {children && <S.Content>{children}</S.Content>}\n      {children && isAction && (\n        <S.ActionButton onClick={onClick} style={{ marginTop: \"1rem\" }}>\n          {actionText}\n        </S.ActionButton>\n      )}\n    </S.Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}