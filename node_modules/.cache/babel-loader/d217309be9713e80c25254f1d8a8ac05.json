{"ast":null,"code":"var _jsxFileName = \"/home/ire/Dev/frontend-engineer-interview/app/src/pages/CreateEmployeePage/CreateEmployee.tsx\";\nimport React, { Component } from \"react\";\nimport { FormValidator } from \"../../components/form/FormValidator\";\nimport { ValidationMessage } from \"../../components/form/validateMsg\";\nimport { StyledFormField, StyledRegisterComponent } from \"./styles\";\nimport { ValidateCustomField } from \"../../components/form/CustomFieldForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class CreateEmployee extends Component {\n  constructor(props) {\n    super(props);\n    this.rules = void 0;\n    this.label = void 0;\n\n    this.updateFormValue = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        data: { ...this.state.data,\n          [name]: value\n        }\n      });\n    };\n\n    this.setErrorState = errors => {\n      this.setState({\n        errors: errors\n      });\n    };\n\n    this.state = {\n      data: {\n        fullname: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        position: \"\",\n        salary: \"\"\n      },\n      errors: {}\n    };\n    this.rules = {\n      fullname: {\n        required: true,\n        minlength: 5,\n        strAlpha: true\n      },\n      phoneNumber: {\n        required: true,\n        minlength: 10,\n        phoneNumber: true\n      },\n      email: {\n        required: true,\n        email: true\n      },\n      position: {\n        required: true,\n        alphanumeric: true\n      },\n      salary: {\n        required: true,\n        numeric: true\n      }\n    };\n    this.label = {\n      fullname: \"Full Name\",\n      phoneNumber: \"Phone Number\",\n      email: \"Email\",\n      position: \"Position\",\n      salary: \"Salary\"\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FormValidator, {\n        data: data,\n        rules: this.rules,\n        validateForm: ValidateCustomField,\n        setErrorState: this.setErrorState,\n        children: /*#__PURE__*/_jsxDEV(StyledRegisterComponent, {\n          children: /*#__PURE__*/_jsxDEV(StyledFormField, {\n            children: Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required\",\n                htmlFor: key,\n                children: this.label[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: key,\n                value: value,\n                onChange: this.updateFormValue,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n                field: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/ire/Dev/frontend-engineer-interview/app/src/pages/CreateEmployeePage/CreateEmployee.tsx"],"names":["React","Component","FormValidator","ValidationMessage","StyledFormField","StyledRegisterComponent","ValidateCustomField","CreateEmployee","constructor","props","rules","label","updateFormValue","event","name","value","target","setState","data","state","setErrorState","errors","fullname","phoneNumber","email","position","salary","required","minlength","strAlpha","alphanumeric","numeric","render","Object","entries","map","key"],"mappings":"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","sourcesContent":["import { Header } from \"../../components/header\";\nimport React, { Component } from \"react\";\nimport { FormValidator } from \"../../components/form/FormValidator\";\nimport { IRule } from \"../../utils/validate\";\nimport { ValidationMessage } from \"../../components/form/validateMsg\";\nimport {\n  StyledFormField,\n  StyledInput,\n  StyledRegisterComponent,\n} from \"./styles\";\nimport { ValidateCustomField } from \"../../components/form/CustomFieldForm\";\nimport { Data, ErrorData } from \"./types\";\n\ninterface Props {}\ninterface State {\n  data: Data;\n  errors: ErrorData;\n}\n\nexport class CreateEmployee extends Component<Props, State> {\n  rules: IRule;\n  label: { [x: string]: any };\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      data: {\n        fullname: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        position: \"\",\n        salary: \"\",\n      },\n      errors: {},\n    };\n    this.rules = {\n      fullname: { required: true, minlength: 5, strAlpha: true },\n      phoneNumber: { required: true, minlength: 10, phoneNumber: true },\n      email: { required: true, email: true },\n      position: { required: true, alphanumeric: true },\n      salary: { required: true, numeric: true },\n    };\n    this.label = {\n      fullname: \"Full Name\",\n      phoneNumber: \"Phone Number\",\n      email: \"Email\",\n      position: \"Position\",\n      salary: \"Salary\",\n    };\n  }\n  updateFormValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    this.setState({ data: { ...this.state.data, [name]: value } });\n  };\n  setErrorState = (errors: ErrorData) => {\n    this.setState({ errors: errors });\n  };\n  render() {\n    const { data } = this.state;\n    return (\n      <>\n        <FormValidator\n          data={data}\n          rules={this.rules}\n          validateForm={ValidateCustomField}\n          setErrorState={this.setErrorState}\n        >\n          <StyledRegisterComponent>\n            <StyledFormField>\n              {Object.entries(data).map(([key, value]) => (\n                <>\n                  <label className={\"required\"} htmlFor={key}>\n                    {this.label[key]}\n                  </label>\n                  <input\n                    name={key}\n                    value={value}\n                    onChange={this.updateFormValue}\n                    required\n                  />\n                  <ValidationMessage field={key} />\n                </>\n              ))}\n            </StyledFormField>\n          </StyledRegisterComponent>\n        </FormValidator>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}