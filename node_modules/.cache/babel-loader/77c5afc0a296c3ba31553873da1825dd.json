{"ast":null,"code":"function randomDate(start, end = new Date()) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n}\n\nfunction getRandomArbitrary(min = 0, max = 250000) {\n  return Math.random() * (max - min) + min;\n}\n\nconst loanDataGenerator = () => {\n  const bigList = [...Array(10)].map(() => ({\n    date: randomDate(new Date(2012, 0, 1)),\n    borrowed: getRandomArbitrary(),\n    received: getRandomArbitrary()\n  }));\n  return bigList;\n};\n\nlet groupsRet = {};\nexport const loanData = () => {\n  let loanData = loanDataGenerator();\n  const groups = loanData.reduce((groups, data) => {\n    const date = data.date.getFullYear();\n\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n\n    groups[date].push(data);\n    return groups;\n  }, groupsRet); // Edit: to add it in the array format instead\n\n  const groupArrays = Object.keys(groups).map(date => {\n    return {\n      date,\n      games: groups[date]\n    };\n  });\n  console.log(groupArrays);\n};","map":{"version":3,"sources":["/home/ire/Dev/frontend-engineer-interview/app/src/pages/DetailEmployeePage/loanData.ts"],"names":["randomDate","start","end","Date","getTime","Math","random","getRandomArbitrary","min","max","loanDataGenerator","bigList","Array","map","date","borrowed","received","groupsRet","loanData","groups","reduce","data","getFullYear","push","groupArrays","Object","keys","games","console","log"],"mappings":"AAMA,SAASA,UAAT,CAAoBC,KAApB,EAAiCC,GAAS,GAAG,IAAIC,IAAJ,EAA7C,EAAyD;AACvD,SAAO,IAAIA,IAAJ,CACLF,KAAK,CAACG,OAAN,KAAkBC,IAAI,CAACC,MAAL,MAAiBJ,GAAG,CAACE,OAAJ,KAAgBH,KAAK,CAACG,OAAN,EAAjC,CADb,CAAP;AAGD;;AACD,SAASG,kBAAT,CAA4BC,GAAG,GAAG,CAAlC,EAAqCC,GAAG,GAAG,MAA3C,EAAmD;AACjD,SAAOJ,IAAI,CAACC,MAAL,MAAiBG,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACD;;AACD,MAAME,iBAAiB,GAAG,MAAuB;AAC/C,QAAMC,OAAO,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,OAAO;AACxCC,IAAAA,IAAI,EAAEd,UAAU,CAAC,IAAIG,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAD,CADwB;AAExCY,IAAAA,QAAQ,EAAER,kBAAkB,EAFY;AAGxCS,IAAAA,QAAQ,EAAET,kBAAkB;AAHY,GAAP,CAAnB,CAAhB;AAKA,SAAOI,OAAP;AACD,CAPD;;AAWA,IAAIM,SAAoB,GAAG,EAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,MAAIA,QAAQ,GAAGR,iBAAiB,EAAhC;AACA,QAAMS,MAAM,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACD,MAAD,EAASE,IAAT,KAAkB;AAC/C,UAAMP,IAAI,GAAGO,IAAI,CAACP,IAAL,CAAUQ,WAAV,EAAb;;AACA,QAAI,CAACH,MAAM,CAACL,IAAD,CAAX,EAAmB;AACjBK,MAAAA,MAAM,CAACL,IAAD,CAAN,GAAe,EAAf;AACD;;AACDK,IAAAA,MAAM,CAACL,IAAD,CAAN,CAAaS,IAAb,CAAkBF,IAAlB;AACA,WAAOF,MAAP;AACD,GAPc,EAOZF,SAPY,CAAf,CAF4B,CAW5B;;AACA,QAAMO,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBN,GAApB,CAAyBC,IAAD,IAAU;AACpD,WAAO;AACLA,MAAAA,IADK;AAELa,MAAAA,KAAK,EAAER,MAAM,CAACL,IAAD;AAFR,KAAP;AAID,GALmB,CAApB;AAOAc,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACD,CApBM","sourcesContent":["type LoanData = {\n  borrowed: number;\n  received: number;\n  date: Date;\n};\n\nfunction randomDate(start: Date, end: Date = new Date()) {\n  return new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  );\n}\nfunction getRandomArbitrary(min = 0, max = 250000) {\n  return Math.random() * (max - min) + min;\n}\nconst loanDataGenerator = (): Array<LoanData> => {\n  const bigList = [...Array(10)].map(() => ({\n    date: randomDate(new Date(2012, 0, 1)),\n    borrowed: getRandomArbitrary(),\n    received: getRandomArbitrary(),\n  }));\n  return bigList;\n};\n\ntype groupType = { [x: string]: any };\n\nlet groupsRet: groupType = {};\n\nexport const loanData = () => {\n  let loanData = loanDataGenerator();\n  const groups = loanData.reduce((groups, data) => {\n    const date = data.date.getFullYear();\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(data);\n    return groups;\n  }, groupsRet);\n\n  // Edit: to add it in the array format instead\n  const groupArrays = Object.keys(groups).map((date) => {\n    return {\n      date,\n      games: groups[date],\n    };\n  });\n\n  console.log(groupArrays);\n};\n"]},"metadata":{},"sourceType":"module"}